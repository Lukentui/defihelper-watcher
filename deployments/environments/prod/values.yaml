# Default values for watcher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

images:
  nginx:
    name: nginx
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 128Mi
        cpu: 1000m
  app:
    name: app
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 128Mi
        cpu: 1000m

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
  hosts:
    - host: watcher.defihelper.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: watcher-tls
      hosts:
        - watcher.defihelper.io

broker:
  maxReplicas: 10
  maxReadyMessagesForHpa: 100
  process:
    labels:
      app: app
      component: broker
      environment: prod
      queue: process
    queues:
      queue:
        name: queue
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:consume -- -q scanner_tasks_default"'
        replicas: 1
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
        resources:
          requests:
            memory: 1024Mi
            cpu: 200m
          limits:
            memory: 2048Mi
            cpu: 500m
      ethresolve:
        name: ethresolve
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run events:resolve -- --network 1 --expiration 300000"'
        replicas: 1
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 500m
      bscresolve:
        name: bscresolve
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run events:resolve -- --network 56 --expiration 300000"'
        replicas: 1
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 500m
      polygonresolve:
        name: polygonresolve
        command: '"/bin/sh","-c","ln -s  ./configuration/.env ./.env && npm run events:resolve -- --network 137 --expiration 300000"'
        replicas: 1
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 500m
      moonriverresolve:
        name: moonriverresolve
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run events:resolve -- --network 1285 --expiration 300000"'
        replicas: 1
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 500m
      avaxresolve:
        name: avaxresolve
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run events:resolve -- --network 43114 --expiration 300000"'
        replicas: 1
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 500m

handlers:
  labels:
    app: watcher
    component: cronHandler
    environment: prod
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 128Mi
      cpu: 100m
  schedules:
    minute30:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:schedule -- --period minute30"'
      schedule: "*/30 * * * *"
    queue-deferred:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:deferred"'
      schedule: "* * * * *"

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
nodeSelector:
  group_name: "apps-web"
tolerations:
  - key: node-role.kubernetes.io/apps-web
    operator: "Equal"
    value: "true"
    effect: NoSchedule
affinity: {}
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
