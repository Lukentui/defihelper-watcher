server {
    listen 80;

    root /var/www;
    index index.html index.htm;

    server_name _;

    set $service_name dfh-watcher;

    access_log  /var/log/nginx/access.log  json_combined;

    set $ref "*";
    if ($http_referer ~* ^(https?\:\/\/)(.*?)\/(.*)$) {
      set $ref $1$2;
    }

    location / {
		try_files      $uri      @backend;
	}

    location @backend {
		proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;
        proxy_hide_header Access-Control-Allow-Methods;

        add_header 'Access-Control-Allow-Origin' $ref always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,signature,timestamp,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        if ($request_method = 'OPTIONS') {
           add_header 'Access-Control-Allow-Origin' $ref always;
           add_header 'Access-Control-Allow-Credentials' 'true' always;
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,signature,timestamp,Authorization' always;
           add_header 'Content-Type' 'application/json; charset=utf-8';
           add_header 'Content-Length' 0;
           add_header 'Content-Security-Policy'  "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' online.swagger.io";
           add_header 'X-Frame-Options' 'DENY' always;
           add_header 'X-XSS-Protection' '0' always;
           add_header 'X-Content-Type-Options' 'nosniff' always;
           add_header 'Referrer-Policy' 'unsafe-url' always;

           return 204;
        }

        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
